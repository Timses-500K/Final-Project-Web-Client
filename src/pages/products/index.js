import Wrapper from "@/components/Navbar/Wrapper";
import ProductCard from "@/components/ProductCard/ProductCard";
import { fetchDataFromAPI } from "@/modules/fetch";
import {
  Box,
  Center,
  Flex,
  FormControl,
  FormLabel,
  Grid,
  GridItem,
  Select,
  SimpleGrid,
  Text,
} from "@chakra-ui/react";
import Head from "next/head";
import { useRouter } from "next/router";

const Products = ({ products, categories }) => {
  const router = useRouter();
  const { category = "all" } = router.query;
  const filterSearch = ({ category }) => {
    const { query } = router;
    if (category) {
      query.category = category;
    }

    router.push({
      pathname: router.pathname,
      query: query,
    });
  };

  const categoryHandler = (e) => {
    filterSearch({ category: e.target.value });
  };

  const filteredProducts = category
    ? products?.filter(
        (product) => product.itemCategory?.[0]?.categoryName === category
      )
    : products;

  return (
    <>
      <Head>
        <title>Products</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <Box w="full" py={{ md: 10 }}>
        <Wrapper>
          <Center maxW={800} mx="auto" mt={{ base: 8, md: 0 }}>
            <Text
              fontSize={{ base: 28, md: 34 }}
              mb={5}
              fontWeight="semibold"
              lineHeight={1.5}
            >
              {category || "All"} Shoes
            </Text>
          </Center>
          <Flex flexDirection={{ base: "column", lg: "row" }} gap={5} py={10}>
            <Box flex={1}>
              <FormControl>
                <FormLabel>Category</FormLabel>
                <Select
                  placeholder="Select category"
                  onChange={categoryHandler}
                >
                  <option value="all">All Categories</option>
                  {categories?.map((category) => {
                    return (
                      <option key={category.id}>{category.categoryName}</option>
                    );
                  })}
                </Select>
              </FormControl>
            </Box>
            <Box flex={6}>
              <SimpleGrid minChildWidth={300} gap={4}>
                {filteredProducts?.map((product) => (
                  <ProductCard key={product.id} data={product} />
                ))}
              </SimpleGrid>
            </Box>
          </Flex>
          {/* <SimpleGrid minChildWidth={400} gap={5} my={14}>
            {products?.map((product) => (
              <ProductCard key={product.id} data={product} />
            ))}
          </SimpleGrid> */}
        </Wrapper>
      </Box>
    </>
  );
};

export default Products;

export async function getStaticProps() {
  const products = await fetchDataFromAPI("/product");
  const categories = await fetchDataFromAPI("/dashboard/category");
  return {
    props: {
      products,
      categories,
    },
  };
}
